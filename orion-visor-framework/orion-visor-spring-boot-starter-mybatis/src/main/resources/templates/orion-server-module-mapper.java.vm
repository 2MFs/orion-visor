/*
 * Copyright (c) 2023 - present Dromara (visor.dromara.org ljh1553488six@139.com).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package ${package.Mapper};

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
#if(${mapperAnnotationClass})
import ${mapperAnnotationClass.name};
#end
import ${superMapperClassPackage};
import ${package.Entity}.${entity};

/**
 * $!{table.comment} Mapper 接口
 *
 * @author ${author}
 * @version ${version}
 * @since ${date}
 */
#if(${mapperAnnotationClass})
@${mapperAnnotationClass.simpleName}
#end
public interface ${table.mapperName} extends ${superMapperClass}<${entity}> {

    /**
     * 获取查询条件
     *
     * @param entity entity
     * @return 查询条件
     */
    default LambdaQueryWrapper<${entity}> queryCondition(${entity} entity) {
        return this.wrapper()
        #foreach($field in ${table.fields})
                .eq(${type}DO::get${field.capitalName}, entity.get${field.capitalName}())#if(!$foreach.hasNext);#end
        #end
    }

}
